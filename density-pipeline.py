# script-version: 2.0
# Catalyst state generated using paraview version 5.10.1

#### import the simple module from the paraview
from paraview.simple import *
#### disable automatic camera reset on 'Show'
paraview.simple._DisableFirstRenderCameraReset()

# ----------------------------------------------------------------
# setup views used in the visualization
# ----------------------------------------------------------------

# get the material library
materialLibrary1 = GetMaterialLibrary()

# Create a new 'Render View'
renderView1 = CreateView('RenderView')
renderView1.ViewSize = [1215, 725]
renderView1.AxesGrid = 'GridAxes3DActor'
renderView1.CenterOfRotation = [0.0, -0.000701904296875, 500.0]
renderView1.StereoType = 'Crystal Eyes'
renderView1.CameraPosition = [1964.259862960441, -0.000701904296875, 500.0]
renderView1.CameraFocalPoint = [0.0, -0.000701904296875, 500.0]
renderView1.CameraViewUp = [0.0, 0.0, 1.0]
renderView1.CameraViewAngle = 21.60919540229885
renderView1.CameraFocalDisk = 1.0
renderView1.CameraParallelScale = 508.3878620646296
renderView1.BackEnd = 'OSPRay raycaster'
renderView1.OSPRayMaterialLibrary = materialLibrary1

SetActiveView(None)

# ----------------------------------------------------------------
# setup view layouts
# ----------------------------------------------------------------

# create new layout object 'Layout #1'
layout1 = CreateLayout(name='Layout #1')
layout1.AssignView(0, renderView1)
layout1.SetSize(1215, 725)

# ----------------------------------------------------------------
# restore active view
SetActiveView(renderView1)
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# setup the data processing pipelines
# ----------------------------------------------------------------

# create a new 'Ruler'
ruler1 = Ruler(registrationName='Ruler1')
ruler1.Point1 = [0.0, 130.0, 290.0]
ruler1.Point2 = [0.0, 230.0, 290.0]

# create a new 'XDMF Reader'
grid = XDMFReader(registrationName='grid', FileNames=['/scratch/ritali/project-ram-pressure/model-for-rps/final-setup-params/check/check-again/temp2e6/overpressurised/output/data.0000.dbl.xmf', '/scratch/ritali/project-ram-pressure/model-for-rps/final-setup-params/check/check-again/temp2e6/overpressurised/output/data.0001.dbl.xmf'])
grid.CellArrayStatus = ['PbykB', 'Temp', 'X', 'Y', 'Z', 'mach', 'ndens', 'prs', 'rho', 'tr1', 'tr2', 'tr3', 'vx1', 'vx2', 'vx3']
grid.GridStatus = ['node_mesh']

# create a new 'Annotate Time Filter'
annotateTimeFilter1 = AnnotateTimeFilter(registrationName='AnnotateTimeFilter1', Input=grid)
annotateTimeFilter1.Format = 'Time: {TEXT_time:.2f} Myr'
annotateTimeFilter1.Scale = 9.81

# create a new 'Slice'
slice1 = Slice(registrationName='Slice1', Input=grid)
slice1.SliceType = 'Plane'
slice1.HyperTreeGridSlicer = 'Plane'
slice1.SliceOffsetValues = [0.0]

# init the 'Plane' selected for 'SliceType'
slice1.SliceType.Origin = [0.0, -0.00069427490234375, 500.0]

# init the 'Plane' selected for 'HyperTreeGridSlicer'
slice1.HyperTreeGridSlicer.Origin = [0.0, -0.00069427490234375, 500.0]

# ----------------------------------------------------------------
# setup the visualization in view 'renderView1'
# ----------------------------------------------------------------

# show data from slice1
slice1Display = Show(slice1, renderView1, 'GeometryRepresentation')

# get color transfer function/color map for 'ndens'
ndensLUT = GetColorTransferFunction('ndens')
ndensLUT.RGBPoints = [6.279424357101082e-05, 0.267004, 0.004874, 0.329415, 6.534221802615972e-05, 0.26851, 0.009605, 0.335427, 6.799289096914191e-05, 0.269944, 0.014625, 0.341379, 7.075180865759507e-05, 0.271305, 0.019942, 0.347269, 7.362192709772298e-05, 0.272594, 0.025563, 0.353093, 7.660925171405825e-05, 0.273809, 0.031497, 0.358853, 7.97169832364144e-05, 0.274952, 0.037752, 0.364543, 8.29516242700025e-05, 0.276022, 0.044167, 0.370164, 8.63175159128258e-05, 0.277018, 0.050344, 0.375715, 8.981907295889915e-05, 0.277941, 0.056324, 0.381191, 9.346362205241005e-05, 0.278791, 0.062145, 0.386592, 9.72550680977257e-05, 0.279566, 0.067836, 0.391917, 0.00010120134430163512, 0.280267, 0.073417, 0.397163, 0.00010530667885006404, 0.280894, 0.078907, 0.402329, 0.0001095796617288705, 0.281446, 0.08432, 0.407414, 0.00011402602755814082, 0.281924, 0.089666, 0.412415, 0.0001186516083108955, 0.282327, 0.094955, 0.417331, 0.0001234660825341038, 0.282656, 0.100196, 0.42216, 0.00012847460863308214, 0.28291, 0.105393, 0.426902, 0.0001336876664281356, 0.283091, 0.110553, 0.431554, 0.00013911084138172575, 0.283197, 0.11568, 0.436115, 0.00014475548092378934, 0.283229, 0.120777, 0.440584, 0.00015062916052659424, 0.283187, 0.125848, 0.44496, 0.00015673958426629827, 0.283072, 0.130895, 0.449241, 0.00016309953756949493, 0.282884, 0.13592, 0.453427, 0.00016971583472480877, 0.282623, 0.140926, 0.457517, 0.00017660231964637742, 0.28229, 0.145912, 0.46151, 0.00018376637076822862, 0.281887, 0.150881, 0.465405, 0.00019122297812274462, 0.281412, 0.155834, 0.469201, 0.0001989801309941624, 0.280868, 0.160771, 0.472899, 0.0002070540604186322, 0.280255, 0.165693, 0.476498, 0.00021545560213296017, 0.279574, 0.170599, 0.479997, 0.0002241957758252451, 0.278826, 0.17549, 0.483397, 0.0002332928694005347, 0.278012, 0.180367, 0.486697, 0.00024275662982053, 0.277134, 0.185228, 0.489898, 0.0002526068590203017, 0.276194, 0.190074, 0.493001, 0.0002628541108988462, 0.275191, 0.194905, 0.496005, 0.0002735198267656797, 0.274128, 0.199721, 0.498911, 0.0002846183207030673, 0.273006, 0.20452, 0.501721, 0.0002961641497941858, 0.271828, 0.209303, 0.504434, 0.0003081814724864023, 0.270595, 0.214069, 0.507052, 0.00032068316458263744, 0.269308, 0.218818, 0.509577, 0.0003336953845742496, 0.267968, 0.223549, 0.512008, 0.0003472320742338336, 0.26658, 0.228262, 0.514349, 0.0003613215576775774, 0.265145, 0.232956, 0.516599, 0.00037598274390583376, 0.263663, 0.237631, 0.518762, 0.00039123486292481777, 0.262138, 0.242286, 0.520837, 0.0004071098282083604, 0.260571, 0.246922, 0.522828, 0.0004236246487799858, 0.258965, 0.251537, 0.524736, 0.0004408138801852846, 0.257322, 0.25613, 0.526563, 0.0004586959396009959, 0.255645, 0.260703, 0.528312, 0.0004773082433778884, 0.253935, 0.265254, 0.529983, 0.0004966757704344656, 0.252194, 0.269783, 0.531579, 0.0005168239237401646, 0.250425, 0.27429, 0.533103, 0.0005377948612116957, 0.248629, 0.278775, 0.534556, 0.0005596110518852047, 0.246811, 0.283237, 0.535941, 0.0005823181438722282, 0.244972, 0.287675, 0.53726, 0.0006059404663889173, 0.243113, 0.292092, 0.538516, 0.0006305274466899698, 0.241237, 0.296485, 0.539709, 0.0006561120820971869, 0.239346, 0.300855, 0.540844, 0.0006827279301065475, 0.237441, 0.305202, 0.541921, 0.0007104306816137135, 0.235526, 0.309527, 0.542944, 0.0007392500183687644, 0.233603, 0.313828, 0.543914, 0.0007692462418385465, 0.231674, 0.318106, 0.544834, 0.0008004514910836186, 0.229739, 0.322361, 0.545706, 0.0008329310598447346, 0.227802, 0.326594, 0.546532, 0.0008667285378091677, 0.225863, 0.330805, 0.547314, 0.0009018882546581045, 0.223925, 0.334994, 0.548053, 0.0009384837784447554, 0.221989, 0.339161, 0.548752, 0.0009765543189635251, 0.220057, 0.343307, 0.549413, 0.0010161795348636192, 0.21813, 0.347432, 0.550038, 0.0010574018820633552, 0.21621, 0.351535, 0.550627, 0.0011003076140398385, 0.214298, 0.355619, 0.551184, 0.0011449543130674165, 0.212395, 0.359683, 0.55171, 0.0011914005389574457, 0.210503, 0.363727, 0.552206, 0.001239743475610251, 0.208623, 0.367752, 0.552675, 0.0012900349194318117, 0.206756, 0.371758, 0.553117, 0.001342380100041325, 0.204903, 0.375746, 0.553533, 0.001396835101996611, 0.203063, 0.379716, 0.553925, 0.0014535138667295259, 0.201239, 0.38367, 0.554294, 0.0015124771219598104, 0.19943, 0.387607, 0.554642, 0.0015738482421707373, 0.197636, 0.391528, 0.554969, 0.001637709591384972, 0.19586, 0.395433, 0.555276, 0.001704144931865894, 0.1941, 0.399323, 0.555565, 0.0017732932726585572, 0.192357, 0.403199, 0.555836, 0.0018452287018465678, 0.190631, 0.407061, 0.556089, 0.0019201017368389525, 0.188923, 0.41091, 0.556326, 0.0019979925993678996, 0.187231, 0.414746, 0.556547, 0.002079064267967729, 0.185556, 0.41857, 0.556753, 0.0021634255460744405, 0.183898, 0.422383, 0.556944, 0.002251187084209558, 0.182256, 0.426184, 0.55712, 0.0023425325142702063, 0.180629, 0.429975, 0.557282, 0.002437559707120412, 0.179019, 0.433756, 0.55743, 0.002536467497284641, 0.177423, 0.437527, 0.557565, 0.0026393618582185546, 0.175841, 0.44129, 0.557685, 0.0027464580856781657, 0.174274, 0.445044, 0.557792, 0.002857899909744914, 0.172719, 0.448791, 0.557885, 0.0029738335005128195, 0.171176, 0.45253, 0.557965, 0.003094501436971103, 0.169646, 0.456262, 0.55803, 0.0032200330071990206, 0.168126, 0.459988, 0.558082, 0.003350690872960255, 0.166617, 0.463708, 0.558119, 0.003486615025912908, 0.165117, 0.467423, 0.558141, 0.003628089873219858, 0.163625, 0.471133, 0.558148, 0.003775305283299525, 0.162142, 0.474838, 0.55814, 0.003928454347843571, 0.160665, 0.47854, 0.558115, 0.004087857515352146, 0.159194, 0.482237, 0.558073, 0.004253685576260214, 0.157729, 0.485932, 0.558013, 0.004426285508550024, 0.15627, 0.489624, 0.557936, 0.0046058422421572385, 0.154815, 0.493313, 0.55784, 0.004792731480884854, 0.153364, 0.497, 0.557724, 0.004987204042209247, 0.151918, 0.500685, 0.557587, 0.005189515001572814, 0.150476, 0.504369, 0.55743, 0.005400087673630983, 0.149039, 0.508051, 0.55725, 0.005619147673713855, 0.147607, 0.511733, 0.557049, 0.0058471533621037635, 0.14618, 0.515413, 0.556823, 0.006084349032507709, 0.144759, 0.519093, 0.556572, 0.006331230992213272, 0.143343, 0.522773, 0.556295, 0.00658813057281836, 0.141935, 0.526453, 0.555991, 0.006855384730723024, 0.140536, 0.530132, 0.555659, 0.007133552667475803, 0.139147, 0.533812, 0.555298, 0.007422932422467383, 0.13777, 0.537492, 0.554906, 0.0077241294927586305, 0.136408, 0.541173, 0.554483, 0.00803746659200355, 0.135066, 0.544853, 0.554029, 0.008363599345515881, 0.133743, 0.548535, 0.553541, 0.008702965444597493, 0.132444, 0.552216, 0.553018, 0.00905601001095225, 0.131172, 0.555899, 0.552459, 0.009423471753641851, 0.129933, 0.559582, 0.551864, 0.0098057443847352, 0.128729, 0.563265, 0.551229, 0.010203627769981669, 0.127568, 0.566949, 0.550556, 0.010617548216320431, 0.126453, 0.570633, 0.549841, 0.01104837180926494, 0.125394, 0.574318, 0.549086, 0.011496560149108274, 0.124395, 0.578002, 0.548287, 0.01196305102336946, 0.123463, 0.581687, 0.547445, 0.012448470493049311, 0.122606, 0.585371, 0.546557, 0.012953455247381165, 0.121831, 0.589055, 0.545623, 0.013479061914478252, 0.121148, 0.592739, 0.544641, 0.01402585364871637, 0.120565, 0.596422, 0.543611, 0.014594974554969083, 0.120092, 0.600104, 0.54253, 0.015187034410373453, 0.119738, 0.603785, 0.5414, 0.015803272038641708, 0.119512, 0.607464, 0.540218, 0.016444514470628214, 0.119423, 0.611141, 0.538982, 0.01711160277715499, 0.119483, 0.614817, 0.537692, 0.017805932771170124, 0.119699, 0.61849, 0.536347, 0.018528248383447087, 0.120081, 0.622161, 0.534946, 0.0192800609843313, 0.120638, 0.625828, 0.533488, 0.020062176093582004, 0.12138, 0.629492, 0.531973, 0.020876230205776825, 0.122312, 0.633153, 0.530398, 0.02172331583431816, 0.123444, 0.636809, 0.528763, 0.022604544039501403, 0.12478, 0.640461, 0.527068, 0.023521758699756118, 0.126326, 0.644107, 0.525311, 0.024475942552710697, 0.128087, 0.647749, 0.523491, 0.025469092128905146, 0.130067, 0.651384, 0.521608, 0.02650227152543836, 0.132268, 0.655014, 0.519661, 0.027577642562814936, 0.134692, 0.658636, 0.517649, 0.028696648458694834, 0.137339, 0.662252, 0.515571, 0.02986075693131024, 0.14021, 0.665859, 0.513427, 0.031072403756649398, 0.143303, 0.669459, 0.511215, 0.032332887137825596, 0.146616, 0.67305, 0.508936, 0.03364484450530676, 0.150148, 0.676631, 0.506589, 0.03500968153862197, 0.153894, 0.680203, 0.504172, 0.03643025401741026, 0.157851, 0.683765, 0.501686, 0.03790846844204897, 0.162016, 0.687316, 0.499129, 0.039446263678338776, 0.166383, 0.690856, 0.496502, 0.04104685740298191, 0.170948, 0.694384, 0.493803, 0.04271196455115015, 0.175707, 0.6979, 0.491033, 0.04444506918648978, 0.180653, 0.701402, 0.488189, 0.04624802822125091, 0.185783, 0.704891, 0.485273, 0.04812461415982501, 0.19109, 0.708366, 0.482284, 0.05007734550222043, 0.196571, 0.711827, 0.479221, 0.05210878350339094, 0.202219, 0.715272, 0.476084, 0.05422317873621802, 0.20803, 0.718701, 0.472873, 0.056422796641766235, 0.214, 0.722114, 0.469588, 0.058712239691887644, 0.220124, 0.725509, 0.466226, 0.06109396088033683, 0.226397, 0.728888, 0.462789, 0.06357294371115842, 0.232815, 0.732247, 0.459277, 0.06615251514005026, 0.239374, 0.735588, 0.455688, 0.0688360586022839, 0.24607, 0.73891, 0.452024, 0.07162918913364238, 0.252899, 0.742211, 0.448284, 0.07453489939723164, 0.259857, 0.745492, 0.444467, 0.07755926928977563, 0.266941, 0.748751, 0.440573, 0.08070553923276366, 0.274149, 0.751988, 0.436601, 0.08398029246904648, 0.281477, 0.755203, 0.432552, 0.08738703769006595, 0.288921, 0.758394, 0.428426, 0.0909329031561199, 0.296479, 0.761561, 0.424223, 0.09462264764857971, 0.304148, 0.764704, 0.419943, 0.0984611107355691, 0.311925, 0.767822, 0.415586, 0.10245632400215003, 0.319809, 0.770914, 0.411152, 0.10661256806722277, 0.327796, 0.77398, 0.40664, 0.11093853943951769, 0.335885, 0.777018, 0.402049, 0.11543887312437306, 0.344074, 0.780029, 0.397381, 0.12012298560228603, 0.35236, 0.783011, 0.392636, 0.1249971632559229, 0.360741, 0.785964, 0.387814, 0.13006779918779987, 0.369214, 0.788888, 0.382914, 0.1353455031765928, 0.377779, 0.791781, 0.377939, 0.14083592994907987, 0.386433, 0.794644, 0.372886, 0.14655056765263902, 0.395174, 0.797475, 0.367757, 0.1524955391609527, 0.404001, 0.800275, 0.362552, 0.15868328370901594, 0.412913, 0.803041, 0.357269, 0.1651221056512292, 0.421908, 0.805774, 0.35191, 0.17182045031964469, 0.430983, 0.808473, 0.346476, 0.1787923333042933, 0.440137, 0.811138, 0.340967, 0.18604522453783903, 0.449368, 0.813768, 0.335384, 0.1935942999413637, 0.458674, 0.816363, 0.329727, 0.20144764787278394, 0.468053, 0.818921, 0.323998, 0.20962170064641497, 0.477504, 0.821444, 0.318195, 0.21812742837108987, 0.487026, 0.823929, 0.312321, 0.2269759873880803, 0.496615, 0.826376, 0.306377, 0.23618589238746152, 0.506271, 0.828786, 0.300362, 0.24576701120125694, 0.515992, 0.831158, 0.294279, 0.25573939132477813, 0.525776, 0.833491, 0.288127, 0.26611371753402846, 0.535621, 0.835785, 0.281908, 0.276911697028353, 0.545524, 0.838039, 0.275626, 0.2881478213963819, 0.555484, 0.840254, 0.269281, 0.2998368282410668, 0.565498, 0.84243, 0.262877, 0.312003175594342, 0.575563, 0.844566, 0.256415, 0.3246598989296494, 0.585678, 0.846661, 0.249897, 0.3378334811251018, 0.595839, 0.848717, 0.243329, 0.3515380368427128, 0.606045, 0.850733, 0.236712, 0.36580224144095014, 0.616293, 0.852709, 0.230052, 0.3806452384072837, 0.626579, 0.854645, 0.223353, 0.39608649621578434, 0.636902, 0.856542, 0.21662, 0.4121583240935416, 0.647257, 0.8584, 0.209861, 0.4288779419899264, 0.657642, 0.860219, 0.203082, 0.4462803339676461, 0.668054, 0.861999, 0.196293, 0.4643841455915414, 0.678489, 0.863742, 0.189503, 0.48322725720583076, 0.688944, 0.865448, 0.182725, 0.5028349574880979, 0.699415, 0.867117, 0.175971, 0.5232329644254462, 0.709898, 0.868751, 0.169257, 0.5444639587273401, 0.720391, 0.87035, 0.162603, 0.5665506880644094, 0.730889, 0.871916, 0.156029, 0.5895393666222245, 0.741388, 0.873449, 0.149561, 0.6134546253191785, 0.751884, 0.874951, 0.143228, 0.6383465043484812, 0.762373, 0.876424, 0.137064, 0.6642416737877318, 0.772852, 0.877868, 0.131109, 0.6911943165875859, 0.783315, 0.879285, 0.125405, 0.7192406049423088, 0.79376, 0.880678, 0.120005, 0.7484173251181002, 0.804182, 0.882046, 0.114965, 0.7787855263694652, 0.814576, 0.883393, 0.110347, 0.8103777463076852, 0.82494, 0.88472, 0.106217, 0.8432600883694735, 0.83527, 0.886029, 0.102646, 0.877467783909329, 0.845561, 0.887322, 0.099702, 0.913072408974822, 0.85581, 0.888601, 0.097452, 0.9501217472814172, 0.866013, 0.889868, 0.095953, 0.9886643937377946, 0.876168, 0.891125, 0.09525, 1.0287809948257662, 0.886271, 0.892374, 0.095374, 1.0705145329518706, 0.89632, 0.893616, 0.096335, 1.1139523312070954, 0.906311, 0.894855, 0.098125, 1.1591409304511622, 0.916242, 0.896091, 0.100717, 1.2061748831313497, 0.926106, 0.89733, 0.104071, 1.2551173118618661, 0.935904, 0.89857, 0.108131, 1.3060324108486936, 0.945636, 0.899815, 0.112838, 1.3590267146446433, 0.9553, 0.901065, 0.118128, 1.4141570033020672, 0.964894, 0.902323, 0.123941, 1.4715386312200607, 0.974417, 0.90359, 0.130215, 1.5312330791919133, 0.983868, 0.904867, 0.136897, 1.5933652516457137, 0.993248, 0.906157, 0.143936]
ndensLUT.UseLogScale = 1
ndensLUT.NanColor = [1.0, 0.0, 0.0]
ndensLUT.ScalarRangeInitialized = 1.0

# trace defaults for the display properties.
slice1Display.Representation = 'Surface'
slice1Display.ColorArrayName = ['CELLS', 'ndens']
slice1Display.LookupTable = ndensLUT
slice1Display.SelectTCoordArray = 'None'
slice1Display.SelectNormalArray = 'None'
slice1Display.SelectTangentArray = 'None'
slice1Display.OSPRayScaleFunction = 'PiecewiseFunction'
slice1Display.SelectOrientationVectors = 'None'
slice1Display.ScaleFactor = 48.0
slice1Display.SelectScaleArray = 'rho'
slice1Display.GlyphType = 'Arrow'
slice1Display.GlyphTableIndexArray = 'rho'
slice1Display.GaussianRadius = 2.4
slice1Display.SetScaleArray = [None, '']
slice1Display.ScaleTransferFunction = 'PiecewiseFunction'
slice1Display.OpacityArray = [None, '']
slice1Display.OpacityTransferFunction = 'PiecewiseFunction'
slice1Display.DataAxesGrid = 'GridAxesRepresentation'
slice1Display.PolarAxes = 'PolarAxesRepresentation'

# show data from annotateTimeFilter1
annotateTimeFilter1Display = Show(annotateTimeFilter1, renderView1, 'TextSourceRepresentation')

# trace defaults for the display properties.
annotateTimeFilter1Display.WindowLocation = 'Upper Center'
annotateTimeFilter1Display.Position = [0.45061728395061723, 0.9375862068965517]
annotateTimeFilter1Display.Bold = 1
annotateTimeFilter1Display.FontSize = 23

# show data from ruler1
ruler1Display = Show(ruler1, renderView1, 'RulerSourceRepresentation')

# trace defaults for the display properties.
ruler1Display.LabelFormat = '%6.3g kpc'
ruler1Display.RulerMode = 1
ruler1Display.Graduation = 25.0
ruler1Display.AxisColor = [0.6666666666666666, 0.6666666666666666, 1.0]
ruler1Display.Color = [0.6666666666666666, 0.6666666666666666, 1.0]

# setup the color legend parameters for each legend in this view

# get color legend/bar for ndensLUT in view renderView1
ndensLUTColorBar = GetScalarBar(ndensLUT, renderView1)
ndensLUTColorBar.WindowLocation = 'Any Location'
ndensLUTColorBar.Position = [0.7712256017656388, 0.2510344827586207]
ndensLUTColorBar.Title = 'Particle number density [/cc]'
ndensLUTColorBar.ComponentTitle = ''
ndensLUTColorBar.TitleBold = 1
ndensLUTColorBar.TitleFontSize = 18
ndensLUTColorBar.LabelBold = 1
ndensLUTColorBar.ScalarBarThickness = 18
ndensLUTColorBar.ScalarBarLength = 0.5396551724137931

# set color bar visibility
ndensLUTColorBar.Visibility = 1

# show color legend
slice1Display.SetScalarBarVisibility(renderView1, True)

# ----------------------------------------------------------------
# setup color maps and opacity mapes used in the visualization
# note: the Get..() functions create a new object, if needed
# ----------------------------------------------------------------

# get opacity transfer function/opacity map for 'ndens'
ndensPWF = GetOpacityTransferFunction('ndens')
ndensPWF.Points = [6.27942435710108e-05, 0.0, 0.5, 0.0, 1.5933652516457129, 1.0, 0.5, 0.0]
ndensPWF.ScalarRangeInitialized = 1

# ----------------------------------------------------------------
# setup extractors
# ----------------------------------------------------------------

# create extractor
pNG1 = CreateExtractor('PNG', renderView1, registrationName='PNG1')
# trace defaults for the extractor.
pNG1.Trigger = 'TimeValue'

# init the 'TimeValue' selected for 'Trigger'
pNG1.Trigger.Length = 0.5

# init the 'PNG' selected for 'Writer'
pNG1.Writer.FileName = 'density_{timestep:06d}.png'
pNG1.Writer.ImageResolution = [1215, 725]
pNG1.Writer.FontScaling = 'Do not scale fonts'
pNG1.Writer.OverrideColorPalette = 'BlackBackground'
pNG1.Writer.Format = 'PNG'

# init the 'PNG' selected for 'Format'
pNG1.Writer.Format.CompressionLevel = '0'

# ----------------------------------------------------------------
# restore active source
SetActiveSource(grid)
# ----------------------------------------------------------------

# ------------------------------------------------------------------------------
# Catalyst options
from paraview import catalyst
options = catalyst.Options()
options.ExtractsOutputDirectory = 'output/catalyst/density'
options.GenerateCinemaSpecification = 1
options.GlobalTrigger = 'TimeValue'
options.EnableCatalystLive = 1
options.CatalystLiveTrigger = 'TimeStep'

# init the 'TimeValue' selected for 'GlobalTrigger'
options.GlobalTrigger.Length = 0.001

# ------------------------------------------------------------------------------
if __name__ == '__main__':
    from paraview.simple import SaveExtractsUsingCatalystOptions
    # Code for non in-situ environments; if executing in post-processing
    # i.e. non-Catalyst mode, let's generate extracts using Catalyst options
    SaveExtractsUsingCatalystOptions(options)
